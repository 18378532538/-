/*问题描述:设集合R={r1,r2,...,rn}是要进行排列的n个元素，其中r1,r2,...,rn可能相同。 试着设计一个算法，列出R的所有不同排列。 即，给定n以及待排的n个可能重复的元素。计算输出n个元素的所有不同排列。 */
/*算法设计:给定n及待排列的n个元素，计算出这n个元素的所有不同排列。 */
/*数据输入:第1行是元素个数n，1<=n<=500。接下来的1行是待排列的n个元素 */
/*结果输出:程序运行结束时，将计算输出n个元素的所有不同排列。最后1行中的数是排列总数。 */
/*输入样例
        输入：
4 
aacc 
输出：
aacc 
acac 
acca 
caac 
caca 
ccaa 

6
*/
#include<stdio.h>
#include<string.h>
int count=0;
void swap(char &a,char &b)
{
	char temp;
	temp=a;
	a=b;
	b=temp;
}
int finish(char list[],int k,int i)
{//第i个元素是否在前面元素[k...i-1]中出现过
	if(i>k)
	{
		for(int j=k;j<i;j++)
			if(list[j]==list[i])
				return 0;	
	}
	return 1;
}
void perm(char list[],int k,int m)
{
	if(k==m)    //当只剩下一个元素时则输出 
	{
		count++;
		for(int i=0;i<=m;i++)
			printf("%c",list[i]);
		putchar('\n');
	}
	for(int i=k;i<=m;i++)  //还有多个元素待排列，递归产生排列
	{
		if(finish(list,k,i))
		{
			swap(list[k],list[i]);
			perm(list,k+1,m);
			swap(list[k],list[i]);
		}
	}		
}
int main()
{
	int i,n;
	printf("请输入元素个数:\n"); 
	scanf("%d",&n);
	printf("请输入待排列的元素:\n");
	getchar();
	char *a=new char[n];
	for(i=0;i<n;i++)
		scanf("%c",&a[i]);
	printf("所有不同排列为:\n");
	perm(a,0,n-1);
	printf("排列总数为：%d\n",count);
	return 0;
} 
